#include<iostream>
using namespace std;
bool used[102][102];
int column, row, dx[8]={1, 0, -1, 0, 1, -1, 1, -1}, dy[8]= {0, 1, 0, -1, 1, -1, -1, 1};
int field[102][102];
void recurse(int a , int b){
    //cout << a  << " "<< b << " " << temp<< endl;
    used[a][b] = true;
    if(a >= column || a < 0 || b >= row || b < 0){
        //cout << temp << endl;
        return;
    }
    for(int i = 0; i < 8; ++i){
        if(used[a+dx[i]][b+dy[i]] == false && field[a+dx[i]][b+dy[i]] == 1){
            recurse(a+dx[i], b+dy[i]);
        }
    }
    return;
}
int main()
{
    int temp =0;
    int counter = 0;
    
    cin >> column >> row;
    for(int i = 0; i < column; ++i){
        for(int j = 0; j < row; ++j){
            used[i][j] = false;
        }
    }
    bool flag = false;
    for(int i = 0; i < column; ++i){
        for(int j = 0; j < row; ++j){
            cin >> temp;
            if(temp>=1){
                field[i][j] = 1;
            }
            else{
                field[i][j] = 0;
                flag = true;
            }
            
        }
    }
    if(flag == false){
        cout << 1;
        return 0;
    }
    for(int i = 0; i < column; ++i){
        for(int j = 0; j < row; ++j){
        //    cout << field[i][j];
        }
      //  cout << endl;
    }
    for(int i = 0; i < column; ++i){
        for(int j = 0; j < row; ++j)
        {
            if(field[i][j] == 1&& used[i][j] == false){
                recurse(i, j);
                ++counter;
            }
        }
    }
    cout << counter;
}


