//
//  main.cpp
//  brokennecklace
//
//  Created by Alvin Wang on 7/6/18.
//  Copyright Â© 2018 Alvin Wang. All rights reserved.
//

#include <iostream>
using namespace std;
int lob;
string necklace;
int cont=0, counter, large = 0;;
int r, b;
bool flag;
void simulate(){
    for(int i = 0; i < lob*2-1; ++i){
        counter = i;
        r = 0;
        b = 0;
        flag = false;
        cont = 0;
        do{
            if(necklace[counter] == 'r'){
                if((r == 0 && b == 0) || (r == 1 && b == 0)){
                    r = 1;
                    ++counter;
                }
                if(r == 0 && b == 1){
                    r = 2;
                    ++counter;
                }
                if(r == 1 && b == 2){
                    flag = true;
                }
                if(r == 2 && b == 1){
                    ++counter;
                }
            }
            if(necklace[counter] == 'b'){
                if((b == 0 && r == 0) || (b == 1 && r == 0)){
                    b = 1;
                    ++counter;
                }
                if(b == 0 && r == 1){
                    b = 2;
                    ++counter;
                }
                if(b == 1 && r == 2){
                    flag = true;
                }
                if(b == 2 && r == 1){
                    ++counter;
                }
            }
            if(necklace[counter] == 'w'){
                ++counter;
            }
        }while(flag == false&& counter <= lob*2-1);
        
        cont = counter - i;
        cout << cont << " " << i << endl;
        if(cont > large){
            large = cont;
        }
    }
}
int main(){
    cin >> lob;
    cin >> necklace;
    string temp = necklace;
    necklace+=temp;
    simulate();
    if(large > lob){
        large = lob;
    }
    cout << large;
}
